library(lmerTest)
library(ordinal)
install.packages("ordinal")
library(ordinal)
library(tidyverse)
library(broom)
AdjMod <- read_csv("AdjMod.csv")
AdjMod <- read_csv("../data/AdjMod.csv")
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
AdjMod <- read_csv("../data/AdjMod.csv")
theme_set(theme_bw())
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#Filter out low familiarity and low frequency properties
quantile(AdjMod$Familiarity)
AdjMod <- AdjMod %>% filter(Familiarity == 1)
quantile(AdjMod$BNCFrequency)
AdjMod <- AdjMod %>% filter(BNCFrequency > 1)
#Filter out gerunds
AdjMod <- AdjMod %>%
mutate(Property = if_else(
endsWith(Property,"ing"),"gerund",Property)) %>%
filter(Property!="gerund")
AdjMod %>% select(Property,VisualStrengthMean) %>%
arrange(desc(VisualStrengthMean))
quantile(AdjMod$VisualStrengthMean)
raw_res <- read_csv("../data/EvidentialConfidenceListener.csv")
raw_res %>% count(ProlificID)
results <- raw_res %>% select(Participant,Property,Type,Response)
#Join results with modality norms
AdjMod %>% select(Property,VisualStrengthMean,ModalityExclusivity) %>%
right_join(results,by="Property") -> results
results %>% filter(Type != "filler") -> results
#Centralize and standardize measures
results <- results %>%
mutate(Type = factor(Type, levels=c("bare","looks")),
Property = factor(Property),
VisualStrength_c = VisualStrengthMean - mean(VisualStrengthMean),
Exclusivity_c = ModalityExclusivity - mean(ModalityExclusivity),
Response_c = Response - mean(Response)) %>%
mutate(VisualStrength_z = VisualStrength_c / sd(VisualStrength_c),
Exclusivity_z = Exclusivity_c / sd(Exclusivity_c),
Response_z = Response_c / sd(Response_c)) %>%
mutate(VisualStrength = VisualStrengthMean,
Exclusivity = ModalityExclusivity)
#Dummy coding with bare as base level
contrasts(results$Type)
results %>% group_by(Property,Type,VisualStrengthMean) %>%
summarize(M=mean(Response),SD=sd(Response)) %>%
mutate(M=round(M,2),SD=round(SD,2)) %>%
ungroup()
#Difference between means
results %>% group_by(Property,Type,VisualStrengthMean) %>%
summarize(M=mean(Response)) %>%
mutate(M=round(M,2)) %>%
pivot_wider(names_from = Type, values_from = M) %>%
mutate(MeanDiff = bare-looks) %>%
arrange(desc(VisualStrengthMean)) -> res_means
res_means %>%
ggplot(aes(x=reorder(Property,VisualStrengthMean),y=MeanDiff)) +
geom_point() +
geom_text(aes(label=Property),nudge_y=1.3)
#Histogram (looks only)
results %>%
filter(Type == "looks") %>%
ggplot(aes(x=Response))+
geom_histogram(binwidth=1, fill="grey70")+
theme_minimal(base_size=18)
#Scatterplot by modality strength
results %>%
ggplot(aes(y=Response,x=VisualStrength_z, color=Type)) +
geom_point(position=position_jitter(width=0.1),alpha=0.7) +
geom_smooth()
#Boxplot by property
results %>% ggplot(aes(y=Response,x=reorder(Property,VisualStrength), fill=Type)) +
geom_boxplot(position="dodge2") +
stat_summary(fun=mean, position=position_dodge(width=0.75), geom="point", shape=18,
size=4) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 30))
#Histogram (looks only)
results %>%
filter(Type == "looks") %>%
ggplot(aes(x=Response))+
geom_histogram(binwidth=1, fill="grey70")+
theme_minimal(base_size=18)
results
#Histogram (looks only)
results %>%
# filter(Type == "looks") %>%
ggplot(aes(x=Response))+
geom_histogram(binwidth=1, fill="grey70")+
theme_minimal(base_size=18)
view(results)
#Histogram (looks only)
results %>%
filter(Type == "looks") %>%
ggplot(aes(x=Response)) +
geom_histogram(binwidth=1, fill="grey70") +
theme_minimal(base_size=18)
#Scatterplot by modality strength
results %>%
ggplot(aes(y=Response,x=VisualStrength_z, color=Type)) +
geom_point(position=position_jitter(width=0.1),alpha=0.7) +
geom_smooth()
#Boxplot by property
results %>% ggplot(aes(y=Response,x=reorder(Property,VisualStrength), fill=Type)) +
geom_boxplot(position="dodge2") +
stat_summary(fun=mean, position=position_dodge(width=0.75), geom="point", shape=18,
size=4) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 30))
#Dotplot by property
results %>%
ggplot(aes(y=Response,x=reorder(Property,VisualStrengthMean), fill=Type)) +
geom_dotplot(binaxis = "y", stackdir ="center", stackratio = 0.4, binwidth = 2,
position = position_dodge(width=0.5), alpha = 1, color="gray30",
dotsize = 1)+
stat_summary(fun = mean, geom = "point", shape = 8, size = 1,
position = position_dodge(width=0.5))+
#  stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = .6,
#              position = position_dodge(width=0.5)) + #95% confidence interval for mean
theme_minimal() +
theme(axis.text.x = element_text(angle = 30))
#Violin plot by property
results %>%
ggplot(aes(y=Response,x=reorder(Property,VisualStrengthMean),fill=Type)) +
geom_violin(scale="width", width=0.8, position=position_dodge(width=0.5))+
stat_summary(fun = mean, geom = "point", shape = 18, size = 2,
position = position_dodge(width=0.5))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = .6,
position = position_dodge(width=0.5)) + #95% confidence interval for mean
theme_minimal() +
theme(axis.text.x = element_text(angle = 30))
results %>%
ggplot(aes(y=Response,x=reorder(Property,VisualStrengthMean),fill=Type)) +
geom_violin(scale="width", width=0.8, position=position_dodge(width=0.5))+
stat_summary(fun = mean, geom = "point", shape = 18, size = 2,
position = position_dodge(width=0.5))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = .6,
position = position_dodge(width=0.5)) + #95% confidence interval for mean
scale_fill_manual(values=cbPalette) +
theme(axis.text.x = element_text(angle = 30))
results %>%
ggplot(aes(y=Response,x=reorder(Property,VisualStrengthMean),fill=Type)) +
geom_violin(scale="width", width=0.8, position=position_dodge(width=0.5))+
stat_summary(fun = mean, geom = "point", shape = 18, size = 2,
position = position_dodge(width=0.5))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = .2,
position = position_dodge(width=0.5)) + #95% confidence interval for mean
scale_fill_manual(values=cbPalette) +
theme(axis.text.x = element_text(angle = 30))
results %>%
ggplot(aes(y=Response,x=reorder(Property,VisualStrengthMean),fill=Type)) +
geom_violin(scale="width", width=0.8, position=position_dodge(width=0.5))+
stat_summary(fun = mean, geom = "point", shape = 18, size = 2,
position = position_dodge(width=0.5))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0,
position = position_dodge(width=0.5)) + #95% confidence interval for mean
scale_fill_manual(values=cbPalette) +
theme(axis.text.x = element_text(angle = 30))
results %>%
ggplot(aes(y=Response,x=reorder(Property,VisualStrengthMean),fill=Type)) +
geom_violin(scale="width", width=0.8, position=position_dodge(.9))+
stat_summary(fun = mean, geom = "point", shape = 18, size = 2,
position = position_dodge(width=0.5))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0,
position = position_dodge(width=0.5)) + #95% confidence interval for mean
scale_fill_manual(values=cbPalette) +
theme(axis.text.x = element_text(angle = 30))
results %>%
ggplot(aes(y=Response,x=reorder(Property,VisualStrengthMean),fill=Type)) +
geom_violin(scale="width", width=0.8, position=position_dodge(.9))+
stat_summary(fun = mean, geom = "point", shape = 18, size = 2,
position = position_dodge(.9))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0,
position = position_dodge(.9)) + #95% confidence interval for mean
scale_fill_manual(values=cbPalette) +
theme(axis.text.x = element_text(angle = 30))
results %>%
ggplot(aes(y=Response,x=reorder(Property,VisualStrengthMean),fill=Type)) +
geom_violin(scale="width", width=0.5, position=position_dodge(.9))+
stat_summary(fun = mean, geom = "point", shape = 18, size = 2,
position = position_dodge(.9))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0,
position = position_dodge(.9)) + #95% confidence interval for mean
scale_fill_manual(values=cbPalette) +
theme(axis.text.x = element_text(angle = 30))
results %>%
ggplot(aes(y=Response,x=reorder(Property,VisualStrengthMean),fill=Type)) +
geom_violin(scale="width", position=position_dodge(.9))+
stat_summary(fun = mean, geom = "point", shape = 18, size = 2,
position = position_dodge(.9))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0,
position = position_dodge(.9)) + #95% confidence interval for mean
scale_fill_manual(values=cbPalette) +
theme(axis.text.x = element_text(angle = 30))
results %>%
ggplot(aes(y=Response,x=reorder(Property,VisualStrengthMean),fill=Type)) +
geom_violin(scale="width", position=position_dodge(1))+
stat_summary(fun = mean, geom = "point", shape = 18, size = 2,
position = position_dodge(.9))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0,
position = position_dodge(.9)) + #95% confidence interval for mean
scale_fill_manual(values=cbPalette) +
theme(axis.text.x = element_text(angle = 30))
results %>%
ggplot(aes(y=Response,x=reorder(Property,VisualStrengthMean),fill=Type)) +
geom_violin(scale="width", position=position_dodge(1))+
stat_summary(fun = mean, geom = "point", shape = 18, size = 2,
position = position_dodge(1))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0,
position = position_dodge(1)) + #95% confidence interval for mean
scale_fill_manual(values=cbPalette) +
theme(axis.text.x = element_text(angle = 30))
results %>%
ggplot(aes(y=Response,x=reorder(Property,VisualStrengthMean),fill=Type)) +
geom_violin(scale="width", position=position_dodge(1))+
stat_summary(fun = mean, geom = "point", shape = 18, size = 2,
position = position_dodge(1))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0,
position = position_dodge(1)) + #95% confidence interval for mean
scale_fill_manual(values=cbPalette) +
xlab("Property (ordered by increasing visual strength)") +
ylab("Mean certainty rating")
results %>%
ggplot(aes(y=Response,x=reorder(Property,VisualStrengthMean),fill=Type)) +
geom_violin(scale="width", position=position_dodge(1),alpha=.5)+
stat_summary(fun = mean, geom = "point", shape = 18, size = 2,
position = position_dodge(1))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0,
position = position_dodge(1)) + #95% confidence interval for mean
scale_fill_manual(values=cbPalette) +
xlab("Property (ordered by increasing visual strength)") +
ylab("Mean certainty rating")
results %>%
ggplot(aes(y=Response,x=reorder(Property,VisualStrengthMean),fill=Type)) +
geom_violin(scale="width", position=position_dodge(1),alpha=.6)+
stat_summary(fun = mean, geom = "point", shape = 18, size = 2,
position = position_dodge(1))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0,
position = position_dodge(1)) + #95% confidence interval for mean
scale_fill_manual(values=cbPalette) +
xlab("Property (ordered by increasing visual strength)") +
ylab("Mean certainty rating")
results %>%
ggplot(aes(y=Response,x=reorder(Property,VisualStrengthMean),fill=Type,shape=Type)) +
geom_violin(scale="width", position=position_dodge(1),alpha=.6)+
stat_summary(fun = mean, geom = "point", size = 2,
position = position_dodge(1))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0,
position = position_dodge(1)) + #95% confidence interval for mean
scale_fill_manual(values=cbPalette) +
xlab("Property (ordered by increasing visual strength)") +
ylab("Mean certainty rating")
view(results)
unique(results$VisualStrengthMean)
unique(results[,c("VisualStrengthMean","Type")])
unique(results[,c("VisualStrengthMean","Property")])
unique(results[,c("VisualStrengthMean","Property")]) %>% arrange(VisualStrengthMean)
nrow(results)
# this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
# setwd(this.dir)
source("helpers.R")
agr = results %>%
group_by(Property,VisualStrengthMean,Type) %>%
summarize(Mean = mean(Response), CILow=ci.low(Response), CIHigh=ci.high(Response)) %>%
ungroup() %>%
mutate(YMin=Mean-CILow,YMax=Mean+CIHigh)
ggplot(aes(y=Mean,x=VisualStrengthMean,color=Type,shape=Type)) +
geom_text(aes(labels=Property))
ggplot(agr,aes(y=Mean,x=VisualStrengthMean,color=Type,shape=Type)) +
geom_text(aes(labels=Property))
ggplot(agr,aes(y=Mean,x=VisualStrengthMean,color=Type,shape=Type)) +
geom_text(aes(labels=Property))
ggplot(agr,aes(y=Mean,x=VisualStrengthMean,color=Type,shape=Type)) +
geom_text(aes(label=Property))
ggsave("../graphs/exp1-certainty.pdf",width=8,height=3)
results %>%
ggplot(aes(y=Response,x=reorder(Property,VisualStrengthMean),fill=Type,shape=Type)) +
geom_violin(scale="width", position=position_dodge(1),alpha=.6)+
stat_summary(fun = mean, geom = "point", size = 2,
position = position_dodge(1))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0,
position = position_dodge(1)) + #95% confidence interval for mean
scale_fill_manual(values=cbPalette) +
xlab("Property (ordered by increasing visual strength)") +
ylab("Mean certainty rating")
ggsave("../graphs/exp1-certainty.pdf",width=8,height=3)
ggsave("../graphs/exp1-certainty.pdf",width=6,height=3)
results %>%
ggplot(aes(y=Response,x=reorder(Property,VisualStrengthMean),fill=Type,shape=Type)) +
geom_violin(scale="width", position=position_dodge(1),alpha=.6)+
stat_summary(fun = mean, geom = "point", size = 2,
position = position_dodge(1))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0,
position = position_dodge(1)) + #95% confidence interval for mean
scale_fill_manual(values=cbPalette,name="Utterance\ntype") +
xlab("Property (ordered by increasing visual strength)") +
ylab("Mean certainty rating")
results %>%
ggplot(aes(y=Response,x=reorder(Property,VisualStrengthMean),fill=Type,shape=Type)) +
geom_violin(scale="width", position=position_dodge(1),alpha=.6)+
stat_summary(fun = mean, geom = "point", size = 2,
position = position_dodge(1))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0,
position = position_dodge(1)) + #95% confidence interval for mean
scale_fill_manual(values=cbPalette,name="Utterance\ntype") +
scale_shape_manual(name="Utterance\ntype") +
xlab("Property (ordered by increasing visual strength)") +
ylab("Mean certainty rating")
results %>%
ggplot(aes(y=Response,x=reorder(Property,VisualStrengthMean),fill=Type,shape=Type)) +
geom_violin(scale="width", position=position_dodge(1),alpha=.6)+
stat_summary(fun = mean, geom = "point", size = 2,
position = position_dodge(1))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0,
position = position_dodge(1)) + #95% confidence interval for mean
scale_fill_manual(values=cbPalette,name="Utterance\ntype") +
scale_shape(name="Utterance\ntype") +
xlab("Property (ordered by increasing visual strength)") +
ylab("Mean certainty rating")
ggsave("../graphs/exp1-certainty.pdf",width=6,height=3)
